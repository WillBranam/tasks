
> react-typescript-starter@0.1.0 test
> react-scripts test --coverage

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS src/objects.test.ts
PASS src/arrays.test.ts
PASS src/nested.test.ts
PASS src/components/StartAttempt.test.tsx
FAIL src/bad-components/ChooseTeam.test.tsx
  ‚óè ChooseTeam Component tests ‚Ä∫ Clicking first team member works

    expect(received).toEqual(expected) // deep equality

    Expected: "Add Alan Turing"
    Received: "Alan Turing"

      20 |         const currentTeam = screen.queryAllByRole("listitem");
      21 |         expect(currentTeam).toHaveLength(1);
    > 22 |         expect(currentTeam[0].textContent).toEqual(first.textContent);
         |                                            ^
      23 |     });
      24 |     test("Clicking the third team member works", () => {
      25 |         const third = screen.queryAllByRole("button")[2];

      at Object.<anonymous> (src/bad-components/ChooseTeam.test.tsx:22:44)

  ‚óè ChooseTeam Component tests ‚Ä∫ Clicking the third team member works

    expect(received).toEqual(expected) // deep equality

    Expected: "Add Ada Lovelace"
    Received: "Ada Lovelace"

      27 |         const currentTeam = screen.queryAllByRole("listitem");
      28 |         expect(currentTeam).toHaveLength(1);
    > 29 |         expect(currentTeam[0].textContent).toEqual(third.textContent);
         |                                            ^
      30 |     });
      31 |     test("Clicking three team members works", () => {
      32 |         const [, second, third, , fifth] = screen.queryAllByRole("button");

      at Object.<anonymous> (src/bad-components/ChooseTeam.test.tsx:29:44)

  ‚óè ChooseTeam Component tests ‚Ä∫ Clicking three team members works

    expect(received).toEqual(expected) // deep equality

    Expected: "Add Ada Lovelace"
    Received: "Ada Lovelace"

      36 |         const currentTeam = screen.queryAllByRole("listitem");
      37 |         expect(currentTeam).toHaveLength(3);
    > 38 |         expect(currentTeam[0].textContent).toEqual(third.textContent);
         |                                            ^
      39 |         expect(currentTeam[1].textContent).toEqual(second.textContent);
      40 |         expect(currentTeam[2].textContent).toEqual(fifth.textContent);
      41 |     });

      at Object.<anonymous> (src/bad-components/ChooseTeam.test.tsx:38:44)

  ‚óè ChooseTeam Component tests ‚Ä∫ Clearing the team works

    expect(received).toEqual(expected) // deep equality

    Expected: "Add Ada Lovelace"
    Received: "Ada Lovelace"

      48 |         let currentTeam = screen.queryAllByRole("listitem");
      49 |         expect(currentTeam).toHaveLength(3);
    > 50 |         expect(currentTeam[0].textContent).toEqual(third.textContent);
         |                                            ^
      51 |         expect(currentTeam[1].textContent).toEqual(second.textContent);
      52 |         expect(currentTeam[2].textContent).toEqual(fifth.textContent);
      53 |         clear.click();

      at Object.<anonymous> (src/bad-components/ChooseTeam.test.tsx:50:44)

FAIL src/components/TwoDice.test.tsx
  ‚óè TwoDice Component tests ‚Ä∫ Clicking left button changes first number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 11

      52 |         leftButton.click();
      53 |         // Then the random function should be called 3 times
    > 54 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      55 |         // And the number to be 5
      56 |         const leftNumber = extractDigits(screen.getByTestId("left-die"));
      57 |         expect(leftNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:54:36)

  ‚óè TwoDice Component tests ‚Ä∫ Clicking right button changes second number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 11

      64 |         rightButton.click();
      65 |         // Then the random function should be called 3 times
    > 66 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      67 |         // And the number to be 5
      68 |         const rightNumber = extractDigits(screen.getByTestId("right-die"));
      69 |         expect(rightNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:66:36)

  ‚óè TwoDice Component tests ‚Ä∫ Rolling two different numbers does not win or lose the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      82 |         const leftNumber = extractDigits(leftDie);
      83 |         const rightNumber = extractDigits(rightDie);
    > 84 |         expect(leftNumber).toEqual(1);
         |                            ^
      85 |         expect(rightNumber).toEqual(6);
      86 |         // And then the game is not won
      87 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:84:28)

  ‚óè TwoDice Component tests ‚Ä∫ Getting snake eyes loses the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      106 |         const leftNumber = extractDigits(leftDie);
      107 |         const rightNumber = extractDigits(rightDie);
    > 108 |         expect(leftNumber).toEqual(1);
          |                            ^
      109 |         expect(rightNumber).toEqual(1);
      110 |         // And then the game is not won
      111 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:108:28)

  ‚óè TwoDice Component tests ‚Ä∫ Getting matching numbers wins the game

    expect(received).toEqual(expected) // deep equality

    Expected: 5
    Received: 4

      129 |         const leftNumber = extractDigits(leftDie);
      130 |         const rightNumber = extractDigits(rightDie);
    > 131 |         expect(leftNumber).toEqual(5);
          |                            ^
      132 |         expect(rightNumber).toEqual(5);
      133 |         // And then the game is not lost
      134 |         const loseText = screen.queryByText(/Lose/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:131:28)

PASS src/functions.test.ts
FAIL src/bad-components/DoubleHalf.test.tsx
  ‚óè DoubleHalf Component tests ‚Ä∫ The DoubleHalf value is initially 10

    TestingLibraryElementError: Unable to find an element with the text: 10. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mDouble Half[0m
          [36m</h3>[39m
          [36m<span>[39m
            [0mThe current value is: [0m
            [0m1[0m
          [36m</span>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mDouble[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mHalve[0m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       8 |     });
       9 |     test("The DoubleHalf value is initially 10", () => {
    > 10 |         expect(screen.getByText("10")).toBeInTheDocument();
         |                       ^
      11 |         expect(screen.queryByText("20")).not.toBeInTheDocument();
      12 |         expect(screen.queryByText("5")).not.toBeInTheDocument();
      13 |     });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/bad-components/DoubleHalf.test.tsx:10:23)

  ‚óè DoubleHalf Component tests ‚Ä∫ You can double the number.

    TestingLibraryElementError: Unable to find an element with the text: 20. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mDouble Half[0m
          [36m</h3>[39m
          [36m<span>[39m
            [0mThe current value is: [0m
            [0m2[0m
          [36m</span>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mDouble[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mHalve[0m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      23 |         const double = screen.getByRole("button", { name: /Double/i });
      24 |         double.click();
    > 25 |         expect(screen.getByText("20")).toBeInTheDocument();
         |                       ^
      26 |         expect(screen.queryByText("10")).not.toBeInTheDocument();
      27 |     });
      28 |     test("You can halve the number.", () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/bad-components/DoubleHalf.test.tsx:25:23)

  ‚óè DoubleHalf Component tests ‚Ä∫ You can halve the number.

    TestingLibraryElementError: Unable to find an element with the text: 5. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mDouble Half[0m
          [36m</h3>[39m
          [36m<span>[39m
            [0mThe current value is: [0m
            [0m0.5[0m
          [36m</span>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mDouble[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mHalve[0m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      29 |         const halve = screen.getByRole("button", { name: /Halve/i });
      30 |         halve.click();
    > 31 |         expect(screen.getByText("5")).toBeInTheDocument();
         |                       ^
      32 |         expect(screen.queryByText("10")).not.toBeInTheDocument();
      33 |     });
      34 |     test("You can double AND halve the number.", () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/bad-components/DoubleHalf.test.tsx:31:23)

  ‚óè DoubleHalf Component tests ‚Ä∫ You can double AND halve the number.

    TestingLibraryElementError: Unable to find an element with the text: 20. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mDouble Half[0m
          [36m</h3>[39m
          [36m<span>[39m
            [0mThe current value is: [0m
            [0m2[0m
          [36m</span>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mDouble[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mHalve[0m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      36 |         const halve = screen.getByRole("button", { name: /Halve/i });
      37 |         double.click();
    > 38 |         expect(screen.getByText("20")).toBeInTheDocument();
         |                       ^
      39 |         expect(screen.queryByText("10")).not.toBeInTheDocument();
      40 |         double.click();
      41 |         expect(screen.getByText("40")).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/bad-components/DoubleHalf.test.tsx:38:23)

PASS src/components/ChangeType.test.tsx
PASS src/components/CycleHoliday.test.tsx
PASS src/components/Counter.test.tsx
PASS src/components/RevealAnswer.test.tsx
PASS src/bad-components/ColoredBox.test.tsx
FAIL src/bad-components/ShoveBox.test.tsx
  ‚óè ShoveBox Component tests ‚Ä∫ Clicking the button moves the box.

    expect(element).toHaveStyle()

    - Expected

    - marginLeft: 14px;

      17 |         const shoveBox = screen.getByRole("button");
      18 |         shoveBox.click();
    > 19 |         expect(screen.getByTestId("moveable-box")).toHaveStyle({
         |                                                    ^
      20 |             marginLeft: "14px"
      21 |         });
      22 |         shoveBox.click();

      at Object.<anonymous> (src/bad-components/ShoveBox.test.tsx:19:52)

FAIL src/text.test.tsx
  ‚óè renders the text 'Hello World' somewhere

    TestingLibraryElementError: Unable to find an element with the text: /Hello World/. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [0mUD CISC275 with React Hooks and TypeScript[0m
          [36m</header>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<h3>[39m
              [0mDouble Half[0m
            [36m</h3>[39m
            [36m<span>[39m
              [0mThe current value is: [0m
              [0m1[0m
            [36m</span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mDouble[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mHalve[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<h3>[39m
              [0mChoose Team[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"row"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"col"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"btn btn-primary btn-sm"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mAdd [0m
                    [0mAlan Turing[0m
                  [36m</button>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"btn btn-primary btn-sm"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mAdd [0m
                    [0mGrace Hopper[0m
                  [36m</button>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"btn btn-primary btn-sm"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mAdd [0m
                    [0mAda Lovelace[0m
                  [36m</button>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"btn btn-primary btn-sm"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mAdd [0m
                    [0mCharles Babbage[0m
                  [36m</button>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"btn btn-primary btn-sm"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mAdd [0m
                    [0mBarbara Liskov[0m
                  [36m</button>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"btn btn-primary btn-sm"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mAdd [0m
                    [0mMargaret Hamilton[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"col"[39m
              [36m>[39m
                [36m<strong>[39m
                  [0mTeam:[0m
                [36m</strong>[39m
                [36m<ul />[39m
                [36m<button[39m
                  [33mclass[39m=[32m"btn btn-primary"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0mClear Team[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<h3>[39m
              [0mColored Box[0m
            [36m</h3>[39m
            [36m<span>[39m
              [0mThe current color is: [0m
              [0mred[0m
            [36m</span>[39m
            [36m<div>[39m
              [36m<button[39m
                [33mclass[39m=[32m"btn btn-primary"[39m
                [33mtype[39m=[32m"button"[39m
              [36m>[39m
                [0mNext Color[0m
              [36m</button>[39m
              [36m<div[39m
                [33mdata-testid[39m=[32m"colored-box"[39m
                [33mstyle[39m=[32m"width: 50px; height: 50px; background-color: red; display: inline-block; vertical-align: bottom; margin-left: 5px;"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<h3>[39m
              [0mShove Box[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin: 10px 0px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"btn btn-primary"[39m
                [33mtype[39m=[32m"button"[39m
              [36m>[39m
                [0mShove the Box[0m
              [36m</button>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"moveable-box"[39m
              [33mstyle[39m=[32m"width: 50px; height: 50px; background-color: lightblue; border: 1px solid blue; margin-left: 10px;"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mAdd One[0m
            [36m</button>[39m
            [0mto [0m
            [0m0[0m
            [0m.[0m
          [36m</span>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [36m<div>[39m
                [0mReveal Answer[0m
              [36m</div>[39m
            [36m</button>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mStart Quiz[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mdisabled[39m=[32m""[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mStop Quiz[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mMulligan[0m
            [36m</button>[39m
            [36m<div>[39m
              [0mAttempts: [0m
              [0m4[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<div>[39m
              [0mTwo Dice[0m
            [36m</div>[39m
            [36m<span[39m
              [33mdata-testid[39m=[32m"left-die"[39m
            [36m>[39m
              [0m5[0m
            [36m</span>[39m
            [36m<span[39m
              [33mdata-testid[39m=[32m"right-die"[39m
            [36m>[39m
              [0m3[0m
            [36m</span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mRoll Left[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mRoll Right[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [36m<div>[39m
                [0mChange Type[0m
              [36m</div>[39m
            [36m</button>[39m
            [36m<div>[39m
              [0mShort Answer[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<hr />[39m
          [36m<div>[39m
            [36m<div>[39m
              [0mCycle Holiday[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mHoliday: [0m
              [0müéÜ[0m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mAdvance by Alphabet[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mAdvance by Year[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       5 | test("renders the text 'Hello World' somewhere", () => {
       6 |     render(<App />);
    >  7 |     const texts = screen.getAllByText(/Hello World/);
         |                          ^
       8 |     expect(texts.length).toBeGreaterThanOrEqual(1);
       9 | });
      10 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at getAllByText (node_modules/@testing-library/dom/dist/query-helpers.js:130:15)
      at Object.<anonymous> (src/text.test.tsx:7:26)

PASS src/App.test.tsx
--------------------|---------|----------|---------|---------|-------------------
File                | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
--------------------|---------|----------|---------|---------|-------------------
All files           |   98.42 |    94.66 |   99.07 |   98.24 |                   
 src                |    98.4 |    96.36 |     100 |   98.18 |                   
  App.tsx           |     100 |      100 |     100 |     100 |                   
  arrays.ts         |     100 |      100 |     100 |     100 |                   
  functions.ts      |     100 |      100 |     100 |     100 |                   
  nested.ts         |      98 |    94.73 |     100 |    97.5 | 229               
  objects.ts        |   95.45 |    83.33 |     100 |   95.45 | 50                
 src/bad-components |   96.66 |       50 |      95 |   96.15 |                   
  ChooseTeam.tsx    |   88.88 |       50 |   83.33 |   88.88 | 23                
  ColoredBox.tsx    |     100 |      100 |     100 |     100 |                   
  DoubleHalf.tsx    |     100 |      100 |     100 |     100 |                   
  ShoveBox.tsx      |     100 |      100 |     100 |     100 |                   
 src/components     |     100 |    94.44 |     100 |     100 |                   
  ChangeType.tsx    |     100 |      100 |     100 |     100 |                   
  Counter.tsx       |     100 |      100 |     100 |     100 |                   
  CycleHoliday.tsx  |     100 |      100 |     100 |     100 |                   
  RevealAnswer.tsx  |     100 |      100 |     100 |     100 |                   
  StartAttempt.tsx  |     100 |       75 |     100 |     100 | 8                 
  TwoDice.tsx       |     100 |      100 |     100 |     100 |                   
 src/interfaces     |       0 |        0 |       0 |       0 |                   
  answer.ts         |       0 |        0 |       0 |       0 |                   
  question.ts       |       0 |        0 |       0 |       0 |                   
--------------------|---------|----------|---------|---------|-------------------

Test Suites: 5 failed, 11 passed, 16 total
Tests:       15 failed, 96 passed, 111 total
Snapshots:   0 total
Time:        6.552 s
Ran all test suites.
